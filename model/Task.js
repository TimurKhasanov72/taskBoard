/*
 * File: public/app/model/Task.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('taskBoard.model.Task', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.field.String',
        'Ext.data.field.Date'
    ],

    fields: [
        {
            type: 'string',
            name: 'name'
        },
        {
            type: 'date',
            name: 'date',
            dateFormat:'Y-m-d',
        },
        {
            name: 'progress',
            type:'number'
        },
        {
            name:'status',
            type:'number'
        }
        ,
        {
            type: 'string',
            name: 'comment'
        },
        {
            name: 'user_id'
        },
        {
            name: 'id',
            type:'number'
        }
        ,
        {
            name: 'progressAr',
            calculate:function(date){
                var ar=[];
                ar.push(date.progress);
                ar.push(100-date.progress);
                return ar;
            }
        },
        /*{
            name: 'progressArBrColor',
            calculate:function(data){
                var ar=[];
                var currentDate= new Date();
                if (data.date<currentDate && data.status==1) {
                    ar.push('#ff6d70');
                }
                else{
                    ar.push( '#008000');
                }
                return ar;
            }
        },
        {
            name: 'progressArSlColor',
            calculate:function(data){
                var ar=[];
                var currentDate= new Date();
                if (data.date<currentDate &&data.status==1) {
                    ar.push('#ff6d70');
                    ar.push('#FFFAFA');
                }
                else{
                    ar.push( '#008000');
                    ar.push('#FFFAFA');
                }
                return ar;
            }
        },*/
        {
            name: 'isAffectsKPI',
            calculate:function(date){
                var rez;
                if (Array.isArray(date.kpi) && date.kpi.length)
                    rez=true
                else
                    rez=false
                return rez;
            }
        },
        {
            name: 'isAffectsPurpose',
            calculate:function(date){
                var rez;
                if (Array.isArray(date.purpose) && date.purpose.length )
                    rez=true
                else
                    rez=false
                return rez;
            }
        },
        {
            name:'kpi',
            type:'auto'
        },
        {
            name:'purpose',
            type:'auto'
        }
        ,
        {
            name:'full_name',
            type:'string',
            persist:false
        }
        ,
        {
            name:'thumbnail',
            type:'string',
            persist:false
        }


    ]
});