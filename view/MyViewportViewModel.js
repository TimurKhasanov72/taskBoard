/*
 * File: public/app/view/MyViewportViewModel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('taskBoard.view.MyViewportViewModel', {
    extend: 'Ext.app.ViewModel',
    alias: 'viewmodel.myviewport',

    requires: [
        'Ext.data.Store',
        'Ext.data.field.Date',
        'Ext.data.proxy.Direct',
        'Ext.data.reader.Json'
    ],

    stores: {
        Users: {
            autoLoad: false,
            id: 'UserStore',
            model: 'taskBoard.model.User',
            proxy: {
                type: 'direct',
                directFn: 'Task.getUsers',
                reader: {
                    type: 'json'
                }
            },
            pageSize: 10
        },
        Department: {
            autoLoad: false,
            id: 'DepartmentStore',
            model: 'taskBoard.model.Department',
            proxy: {
                type: 'direct',
                directFn: 'Department.getDepartment',
                reader: {
                    type: 'json'
                }
            },
            pageSize: 10
        },
        Purpose: {
            autoLoad: true,
            model: 'taskBoard.model.Purpose',
            id: 'PurposeStore',
            proxy: {
                type: 'direct',
                api: {
                    prefix: 'Purpose',
                    read: 'getPurpose',
                    update: 'updatePurpose',
                },
                reader: {
                    type: 'json'
                }
            },
            listeners:{
                beforeload:'onPurposeStoreBeforeload'
            },
        },

        ideaQuarter: {
            autoLoad: true,
            id: 'ideaStore',
            proxy: {
                type: 'direct',
                directFn: 'Task.getIdeaByQuarter',
                reader: {
                    type: 'json'
                }
            },
            listeners:{
                beforeload:'onIdeaStoreBeforeload'
            },
            fields: [
                {
                    name: 'filed',
                    type: 'int'
                },
                {
                    name: 'implemented',
                    type: 'int'
                },
                {
                    name: 'approved',
                    type: 'int'
                },
                {
                    name: 'quarter',
                    type: 'string'
                }
                ,
                {
                    name: 'engagement',
                    type: 'number'
                }
            ]

        }
    }

});